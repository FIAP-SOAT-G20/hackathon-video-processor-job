// Code generated by mockgen. DO NOT EDIT.
// Source: internal/core/port/video_gateway_port.go

package mocks

import (
	context "context"
	io "io"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockVideoGateway is a mock of VideoGateway interface.
type MockVideoGateway struct {
	ctrl     *gomock.Controller
	recorder *MockVideoGatewayMockRecorder
}

// MockVideoGatewayMockRecorder is the mock recorder for MockVideoGateway.
type MockVideoGatewayMockRecorder struct {
	mock *MockVideoGateway
}

// NewMockVideoGateway creates a new mock instance.
func NewMockVideoGateway(ctrl *gomock.Controller) *MockVideoGateway {
	mock := &MockVideoGateway{ctrl: ctrl}
	mock.recorder = &MockVideoGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVideoGateway) EXPECT() *MockVideoGatewayMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockVideoGateway) Delete(ctx context.Context, key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, key)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockVideoGatewayMockRecorder) Delete(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockVideoGateway)(nil).Delete), ctx, key)
}

// Download mocks base method.
func (m *MockVideoGateway) Download(ctx context.Context, key string) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Download", ctx, key)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Download indicates an expected call of Download.
func (mr *MockVideoGatewayMockRecorder) Download(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Download", reflect.TypeOf((*MockVideoGateway)(nil).Download), ctx, key)
}

// Upload mocks base method.
func (m *MockVideoGateway) Upload(ctx context.Context, key string, data io.Reader, contentType string, size int64) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upload", ctx, key, data, contentType, size)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Upload indicates an expected call of Upload.
func (mr *MockVideoGatewayMockRecorder) Upload(ctx, key, data, contentType, size interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upload", reflect.TypeOf((*MockVideoGateway)(nil).Upload), ctx, key, data, contentType, size)
}
