// Code generated by mockgen. DO NOT EDIT.
// Source: internal/core/port/video_gateway_port.go

package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockVideoProcessor is a mock of VideoProcessor interface.
type MockVideoProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockVideoProcessorMockRecorder
}

// MockVideoProcessorMockRecorder is the mock recorder for MockVideoProcessor.
type MockVideoProcessorMockRecorder struct {
	mock *MockVideoProcessor
}

// NewMockVideoProcessor creates a new mock instance.
func NewMockVideoProcessor(ctrl *gomock.Controller) *MockVideoProcessor {
	mock := &MockVideoProcessor{ctrl: ctrl}
	mock.recorder = &MockVideoProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVideoProcessor) EXPECT() *MockVideoProcessorMockRecorder {
	return m.recorder
}

// ProcessVideo mocks base method.
func (m *MockVideoProcessor) ProcessVideo(ctx context.Context, videoPath string, frameRate float64, outputFormat string) ([]string, int, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessVideo", ctx, videoPath, frameRate, outputFormat)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(string)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// ProcessVideo indicates an expected call of ProcessVideo.
func (mr *MockVideoProcessorMockRecorder) ProcessVideo(ctx, videoPath, frameRate, outputFormat interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessVideo", reflect.TypeOf((*MockVideoProcessor)(nil).ProcessVideo), ctx, videoPath, frameRate, outputFormat)
}

// ValidateVideo mocks base method.
func (m *MockVideoProcessor) ValidateVideo(ctx context.Context, videoPath string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateVideo", ctx, videoPath)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateVideo indicates an expected call of ValidateVideo.
func (mr *MockVideoProcessorMockRecorder) ValidateVideo(ctx, videoPath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateVideo", reflect.TypeOf((*MockVideoProcessor)(nil).ValidateVideo), ctx, videoPath)
}
